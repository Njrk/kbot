name: KBOT-CICD

on: push

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run test
        run: make test
      - name: Docker Hub login
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build&Push
        env:
          APP: "kbot"         
          REGISTRY: ${{ secrets.DOCKERHUB_USERNAME }}
          TARGETOS: ${{ vars.TARGETOS }}
          TARGETOSARCH: ${{ vars.TARGETOSARCH }}
          REPOSITORY: ${{ vars.REPOSITORY }}
        run: make image push

  cd:
    name: CD
    needs: ci
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - run: |
        echo "VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "REGISTRY=${{ vars.REGISTRY }}" >> $GITHUB_ENV
        echo "TARGETOS=${{ vars.TARGETOS }}" >> $GITHUB_ENV
        echo "TARGETARCH=${{ vars.TARGETARCH }}" >> $GITHUB_ENV
        echo "APP=${{ vars.APP }}" >> $GITHUB_ENV

    - uses: mikefarah/yq@master
      with:
        cmd: |
          yq -i '.image.tag=strenv(VERSION)' helm/values.yaml
          yq -i '.image.registry=strenv(REGISTRY)' helm/values.yaml
          yq -i '.image.os=strenv(TARGETOS)' helm/values.yaml
          yq -i '.image.arch=strenv(TARGETARCH)' helm/values.yaml
          yq -i '.VERSION=strenv(VERSION)' otel/.env
          yq -i '.REGISTRY=strenv(REGISTRY)' otel/.env
          yq -i '.TARGETOS=strenv(TARGETOS)' otel/.env
          yq -i '.TARGETARCH=strenv(TARGETARCH)' otel/.env
          yq -i '.APP=strenv(APP)' otel/.env
    
    - run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git commit -am "update version $VERSION"
        git push